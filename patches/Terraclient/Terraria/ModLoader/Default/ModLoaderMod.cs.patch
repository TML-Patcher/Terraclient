--- src/tModLoader/Terraria/ModLoader/Default/ModLoaderMod.cs
+++ src/Terraclient/Terraria/ModLoader/Default/ModLoaderMod.cs
@@ -25,6 +_,12 @@
 			Side = ModSide.NoSync;
 			DisplayName = "tModLoader";
 			Code = Assembly.GetExecutingAssembly();
+
+			BackgroundAutoloadingEnabled
+				= ContentAutoloadingEnabled
+					= GoreAutoloadingEnabled
+						= MusicAutoloadingEnabled
+							= SoundAutoloadingEnabled = !ModNet.AllowVanillaClients;
 		}
 
 		public override IContentSource CreateDefaultContentSource() => new AssemblyResourcesContentSource(Assembly.GetExecutingAssembly(), "Terraria.ModLoader.Default.");
@@ -32,6 +_,17 @@
 		public override void Load() {			
 			PatronSets = GetContent<PatreonItem>().GroupBy(t => t.InternalSetName).Select(set => set.ToArray()).ToArray();
 			DeveloperSets = GetContent<DeveloperItem>().GroupBy(t => t.InternalSetName).Select(set => set.ToArray()).ToArray();
+
+			if (ModNet.AllowVanillaClients) {
+				// Manually added safe unloaded handlers.
+				AddContent(new DefaultBossBarStyle());
+				AddContent(new HelpCommand());
+				AddContent(new LegacyUnloadedTilesSystem());
+				AddContent(new ModlistCommand());
+				AddContent(new UnloadedGlobalItem());
+				AddContent(new UnloadedPlayer());
+				AddContent(new UnloadedSystem());
+			}
 		}
 
 		public override void Unload() {
@@ -40,6 +_,9 @@
 		}
 
 		internal static bool TryGettingPatreonOrDevArmor(Player player) {
+			if (ModNet.AllowVanillaClients)
+				return false;
+
 			if (Main.rand.NextBool(ChanceToGetPatreonArmor)) {
 				int randomIndex = Main.rand.Next(PatronSets.Length);
 
